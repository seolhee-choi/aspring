package site.itwill.controller;

import java.util.HashMap;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.util.HtmlUtils;

import site.itwill.dto.Review;
import site.itwill.service.ReviewService;
import site.itwill.util.Pager;

@Controller
public class ReviewController {
	@Autowired
	private ReviewService reviewService;
	
	 @RequestMapping("/review") 
	 public String boardReview() { 
		return "board/review";
	 }
	 
	@RequestMapping(value = "review/list", method = RequestMethod.GET)
	@ResponseBody
	public Map<String, Object> ReviewList(@RequestParam(defaultValue = "1") int pageNum) {
		//System.out.println("pageNum = "+pageNum);
		int totalBoard=reviewService.getReviewCount(); 
		int pageSize=5; 
		int blockSize=5;
		
		Pager pager=new Pager(pageNum, totalBoard, pageSize, blockSize);
		
		Map<String, Object> pagerMap=new HashMap<String, Object>();
		pagerMap.put("startRow", pager.getStartRow()); 
		pagerMap.put("endRow", pager.getEndRow());
		
		Map<String, Object> returnMap=new HashMap<String, Object>();
		returnMap.put("reviewList", reviewService.getSearchReviewList(pagerMap));
		returnMap.put("pager",pager);
		
		return returnMap;
	}
	
	@RequestMapping(value = "review/write", method = RequestMethod.GET)
	public String reviewAdd() {
		return "board/review_write";
	}
	
	//리뷰 전달받아 리뷰 추가
	@RequestMapping(value="review/write", method = RequestMethod.POST)
	@ResponseBody
	public String reviewAdd(@RequestBody Review review) {
		review.setRvContent(HtmlUtils.htmlEscape(review.getRvContent()));
		reviewService.addReview(review);
		return "board/review";
	}
	
	//리뷰번호 전달받아 해당 게시글 검색 + 조회수 증가
	@RequestMapping(value = "review/detail/{rvNo}", method = RequestMethod.GET)
	@ResponseBody
	public Review ReviewDetail(@PathVariable int rvNo) {
		reviewService.modifyHitsReview(rvNo);
		return reviewService.getReview(rvNo);
	}
	
	@RequestMapping(value = "review/modify", method = RequestMethod.GET)
	@ResponseBody
	public String reviewModify() {
		return "board/review_modify";
	}
	
	//리뷰 전달받아 리뷰 변경
	@RequestMapping(value = "review/modify", method = {RequestMethod.PUT, RequestMethod.PATCH})
	@ResponseBody
	public String reviewModify(@RequestBody Review review) {
		reviewService.modifyReview(review);
		return "success";
	}
	
	
	
	//글번호 전달받아 리뷰 삭제
	@RequestMapping(value ="review/remove/{rvNo}", method = RequestMethod.DELETE)
	@ResponseBody
	public String reviewRemove(@PathVariable int rvNo) {
		reviewService.removeReview(rvNo);
		return "success";
	}
	
	
	//파일 업로드
	
	
	
}
