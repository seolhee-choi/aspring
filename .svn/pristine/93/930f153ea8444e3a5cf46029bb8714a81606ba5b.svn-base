package site.itwill.dao;

import java.util.List;
import java.util.Map;

import org.apache.ibatis.session.SqlSession;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import site.itwill.dto.Member;
import site.itwill.dto.Reservation;
import site.itwill.dto.ReservationJoin;
import site.itwill.dto.ReservationSearch;
import site.itwill.dto.ReservationTwo;
import site.itwill.dto.Room;
import site.itwill.dto.RoomCheck;
import site.itwill.mapper.ReservationMapper;

@Repository
public class ReservationDAOImpl implements ReservationDAO{
	
	@Autowired
	private SqlSession sqlSession;

	@Override
	public List<RoomCheck> selectRoomCheck(ReservationTwo reservationTwo) {
		return sqlSession.getMapper(ReservationMapper.class).selectRoomCheck(reservationTwo);
	}

	@Override
	public List<Room> selectAvailableRoom(ReservationTwo reservationTwo) {
		return sqlSession.getMapper(ReservationMapper.class).selectAvailableRoom(reservationTwo);
	}

	@Override
	public int selectCheckAvailable(ReservationTwo reservationTwo) {
		return sqlSession.getMapper(ReservationMapper.class).selectCheckAvailable(reservationTwo);
	}

	@Override
	public Room selectRoomOne(int rmNo) {
		return sqlSession.getMapper(ReservationMapper.class).selectRoomOne(rmNo);
	}

	@Override
	public int insertRsv(Reservation reservation) {
		return sqlSession.getMapper(ReservationMapper.class).insertRsv(reservation);
	}

	@Override
	public List<ReservationJoin> selectRsvList() {
		return sqlSession.getMapper(ReservationMapper.class).selectRsvList();
	}

	@Override
	public List<ReservationJoin> selectDynamicRsvList(ReservationSearch rsvSearch) {
		return sqlSession.getMapper(ReservationMapper.class).selectDynamicRsvList(rsvSearch);
	}

	@Override
	public ReservationJoin selectRsvOne(int rsvNo) {
		// TODO Auto-generated method stub
		return null;
	}

	//------------------------------------------------------------------------------
	@Override
	public Member selectTestMember(String mId) {
		return sqlSession.getMapper(ReservationMapper.class).selectTestMember(mId);
	}

	@Override
	public int updateMileageMinus(Map<String, Object> minusMileage) {
		return sqlSession.getMapper(ReservationMapper.class).updateMileageMinus(minusMileage);
	}

	@Override
	public int updateMileagePlus(Map<String, Object> minusMileage) {
		return sqlSession.getMapper(ReservationMapper.class).updateMileagePlus(minusMileage);
	}
	
}
